@page
@model RazorPagesMovie.Pages.IndexModel

@{
    ViewData["Title"] = "Schmoovies";
}

<div class="w-full h-full bg-cover bg-center flex flex-col items-center justify-center text-white"
     style="background-image: url('/images/banner-bg.jpg'); height: 300px; ;">
    <div class="px-8 py-6 rounded-lg text-center max-w-4xl w-full">
        <h2 class="text-4xl font-bold mb-2">Welcome to Schmoovies!</h2>
        <p class="text-lg mb-4">Find your favorite movies and discover new ones.</p>

        <div class="flex items-center bg-white rounded-lg overflow-hidden shadow-md w-10px max-w-lg mx-auto">
            <input type="text" placeholder="Search for a movie..."
                   class="w-full px-4 py-2 text-gray-700 focus:outline-none">
            <button class="px-4 py-2 bg-red-600 text-white font-bold hover:bg-red-700">
                Search
            </button>
        </div>
    </div>
</div>


<div class="container mx-auto py-8 relative overflow-hidden">
    <h1 class="text-4xl font-bold text-white mb-6">
        Movies
    </h1>

    <div class="relative w-full mx-auto overflow-hidden">
        <div id="carousel" class="flex transition-transform duration-500 ease-in-out">
            @foreach (var item in Model.Movie.Concat(Model.Movie))
            {
                <div class="carousel-item w-64 mx-2 flex-shrink-0">
                    <div class="bg-gray-800 rounded-lg shadow-lg overflow-hidden transition-transform duration-300 hover:scale-105">
                        <a asp-page="./Details" asp-route-id="@item.Id">
                            <img src="@(string.IsNullOrEmpty(item.ThumbnailUrl)
                                      ? Url.Content("~/images/movies/placeholder.png")
                                      : item.ThumbnailUrl)"
                                 alt="@item.Title"
                                 class="w-full h-80 object-cover cursor-pointer">
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <button onclick="moveSlide(-1)"
            class="carousel-btn left-btn">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
             class="w-8 h-8">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
        </svg>
    </button>

    <button onclick="moveSlide(1)"
            class="carousel-btn right-btn">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
             class="w-8 h-8">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
        </svg>
    </button>
</div>

<script>
    const carousel = document.getElementById('carousel');
    const cards = document.querySelectorAll('.carousel-item');

    let index = 0;
    const cardWidth = cards[0].offsetWidth + 16;  
    const totalCards = cards.length / 2; 

    carousel.style.transition = 'none';
    carousel.style.transform = `translateX(${-totalCards * cardWidth}px)`;

    function moveSlide(direction) {
        index += direction;

        carousel.style.transition = 'transform 0.5s ease-in-out';
        const offset = -index * cardWidth;
        carousel.style.transform = `translateX(${offset}px)`;

        carousel.addEventListener('transitionend', () => {
            if (index >= totalCards) {
                index = 0;
                carousel.style.transition = 'none';
                carousel.style.transform = `translateX(${-index * cardWidth}px)`;
            } else if (index < 0) {
                index = totalCards - 1;
                carousel.style.transition = 'none';
                carousel.style.transform = `translateX(${-index * cardWidth}px)`;
            }
        });
    }

    setInterval(() => moveSlide(1), 5000);
</script>

<style>
    .carousel-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
        background: rgba(0, 0, 0, 0.7);
        color: white;
        border: none;
        width: 60px;
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        transition: background 0.3s, transform 0.3s;
        cursor: pointer;
    }

        .carousel-btn:hover {
            background: rgba(255, 255, 255, 0.9);
            color: black;
        }

        .carousel-btn svg {
            width: 32px;
            height: 32px;
        }

    .left-btn {
        left: 15px;
    }

    .right-btn {
        right: 15px;
    }
</style>
